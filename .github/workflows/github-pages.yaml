# https://github.com/actions/deploy-pages#usage
name: Deploy to GitHub Pages
on:
  workflow_dispatch:
  push:
    branches:
      - wip
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install mkcert latest version and generate certificates
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/FiloSottile/mkcert/releases/latest | jq -r '.tag_name')
          curl -L -o mkcert "https://github.com/FiloSottile/mkcert/releases/download/${LATEST_VERSION}/mkcert-${LATEST_VERSION}-linux-amd64" -o mkcert
          chmod +x mkcert
          ./mkcert -install
          mkdir -p certs
          ./mkcert -key-file certs/nuxt-full-demo.key.pem -cert-file certs/nuxt-full-demo.crt.pem localhost
      - name: Install dependencies
        run: pnpm install
      - name: Run dev server in background
        run: pnpm dev --https --ssl-cert certs/nuxt-full-demo.crt.pem --ssl-key certs/nuxt-full-demo.key.pem &
      - name: Install Cypress
        run: pnpm cypress install
      - name: Run tests
        run: pnpm cypress run

  build:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'pnpm'
      # Pick your own package manager and build script
      - run: pnpm install
      - run: NUXT_APP_BASE_URL=/nuxt-full-demo/ pnpm build --preset github_pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./.output/public
  # Deployment job
  deploy:
    # Add a dependency to the build job
    needs: build
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    # Deploy to the github_pages environment
    environment:
      name: github_pages
      url: ${{ steps.deployment.outputs.page_url }}
    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
